Passed: 73
Have no matches: 16


reportName

Results:
Passed: 73
Have no matches: 16

Passed: 73
p:not(:nth-child(1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 1])]
p:not(:nth-child(2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 2])]
p:not(:nth-child(3)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 3])]
p:not(:nth-child(4)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 4])]
p:not(:nth-child(2n)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 2 = 0])]
p:not(:nth-child(3n)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 3 = 0])]
p:not(:nth-child(4n)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 4 = 0])]
p:not(:nth-child(odd)) 23 === 23 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 2 = 1])]
p:not(:nth-child(n+2)) 5 === 5 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 2])]
p:not(:nth-child(n+3)) 8 === 8 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 3])]
p:not(:nth-child(n+4)) 13 === 13 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 4])]
p:not(:nth-child(even)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 2 = 0])]
p:not(:nth-child(0n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 1])]
p:not(:nth-child(0n+2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 2])]
p:not(:nth-child(0n+3)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 3])]
p:not(:nth-child(0n+4)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 4])]
p:not(:nth-child(1n+2)) 5 === 5 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 2])]
p:not(:nth-child(1n+3)) 8 === 8 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 3])]
p:not(:nth-child(1n+4)) 13 === 13 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 4])]
p:not(:nth-child(2n+0)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 2 = 0])]
p:not(:nth-child(2n-0)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 2 = 0])]
p:not(:nth-child(2n+1)) 23 === 23 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 1 and (count(preceding-sibling::*)) mod 2 = 0])]
p:not(:nth-child(2n-1)) 23 === 23 //p[not(self::node()[(count(preceding-sibling::*) + 2) mod 2 = 0])]
p:not(:nth-child(2n+2)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 2 and (count(preceding-sibling::*) - 1) mod 2 = 0])]
p:not(:nth-child(2n-2)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 3) mod 2 = 0])]
p:not(:nth-child(2n+3)) 28 === 28 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 3 and (count(preceding-sibling::*) - 2) mod 2 = 0])]
p:not(:nth-child(2n-3)) 23 === 23 //p[not(self::node()[(count(preceding-sibling::*) + 4) mod 2 = 0])]
p:not(:nth-child(2n+4)) 28 === 28 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 4 and (count(preceding-sibling::*) - 3) mod 2 = 0])]
p:not(:nth-child(2n-4)) 25 === 25 //p[not(self::node()[(count(preceding-sibling::*) + 5) mod 2 = 0])]
p:not(:nth-child(3n+0)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 3 = 0])]
p:not(:nth-child(3n-0)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 3 = 0])]
p:not(:nth-child(3n+1)) 29 === 29 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 1 and (count(preceding-sibling::*)) mod 3 = 0])]
p:not(:nth-child(3n-1)) 33 === 33 //p[not(self::node()[(count(preceding-sibling::*) + 2) mod 3 = 0])]
p:not(:nth-child(3n+2)) 33 === 33 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 2 and (count(preceding-sibling::*) - 1) mod 3 = 0])]
p:not(:nth-child(3n-2)) 29 === 29 //p[not(self::node()[(count(preceding-sibling::*) + 3) mod 3 = 0])]
p:not(:nth-child(3n+3)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 3 and (count(preceding-sibling::*) - 2) mod 3 = 0])]
p:not(:nth-child(3n-3)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 4) mod 3 = 0])]
p:not(:nth-child(3n+4)) 34 === 34 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 4 and (count(preceding-sibling::*) - 3) mod 3 = 0])]
p:not(:nth-child(3n-4)) 33 === 33 //p[not(self::node()[(count(preceding-sibling::*) + 5) mod 3 = 0])]
p:not(:nth-child(4n+0)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 4 = 0])]
p:not(:nth-child(4n-0)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 1) mod 4 = 0])]
p:not(:nth-child(4n+1)) 35 === 35 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 1 and (count(preceding-sibling::*)) mod 4 = 0])]
p:not(:nth-child(4n-1)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 2) mod 4 = 0])]
p:not(:nth-child(4n+2)) 37 === 37 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 2 and (count(preceding-sibling::*) - 1) mod 4 = 0])]
p:not(:nth-child(4n-2)) 37 === 37 //p[not(self::node()[(count(preceding-sibling::*) + 3) mod 4 = 0])]
p:not(:nth-child(4n+3)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 3 and (count(preceding-sibling::*) - 2) mod 4 = 0])]
p:not(:nth-child(4n-3)) 35 === 35 //p[not(self::node()[(count(preceding-sibling::*) + 4) mod 4 = 0])]
p:not(:nth-child(4n+4)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 4 and (count(preceding-sibling::*) - 3) mod 4 = 0])]
p:not(:nth-child(4n-4)) 36 === 36 //p[not(self::node()[(count(preceding-sibling::*) + 5) mod 4 = 0])]
p:not(:nth-child(-n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 1])]
p:not(:nth-child(-n+2)) 40 === 40 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 2])]
p:not(:nth-child(-n+3)) 35 === 35 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 3])]
p:not(:nth-child(-n+4)) 30 === 30 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 4])]
p:not(:nth-child(-0n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 1])]
p:not(:nth-child(-0n+2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 2])]
p:not(:nth-child(-0n+3)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 3])]
p:not(:nth-child(-0n+4)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) = 4])]
p:not(:nth-child(-1n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 1])]
p:not(:nth-child(-1n+2)) 40 === 40 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 2])]
p:not(:nth-child(-1n+3)) 35 === 35 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 3])]
p:not(:nth-child(-1n+4)) 30 === 30 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 4])]
p:not(:nth-child(-2n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 1 and (count(preceding-sibling::*)) mod 2 = 0])]
p:not(:nth-child(-2n+2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 2 and (count(preceding-sibling::*) - 1) mod 2 = 0])]
p:not(:nth-child(-2n+3)) 38 === 38 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 3 and (count(preceding-sibling::*) - 2) mod 2 = 0])]
p:not(:nth-child(-2n+4)) 40 === 40 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 4 and (count(preceding-sibling::*) - 3) mod 2 = 0])]
p:not(:nth-child(-3n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 1 and (count(preceding-sibling::*)) mod 3 = 0])]
p:not(:nth-child(-3n+2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 2 and (count(preceding-sibling::*) - 1) mod 3 = 0])]
p:not(:nth-child(-3n+3)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 3 and (count(preceding-sibling::*) - 2) mod 3 = 0])]
p:not(:nth-child(-3n+4)) 38 === 38 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 4 and (count(preceding-sibling::*) - 3) mod 3 = 0])]
p:not(:nth-child(-4n+1)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 1 and (count(preceding-sibling::*)) mod 4 = 0])]
p:not(:nth-child(-4n+2)) 45 === 45 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 2 and (count(preceding-sibling::*) - 1) mod 4 = 0])]
p:not(:nth-child(-4n+3)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 3 and (count(preceding-sibling::*) - 2) mod 4 = 0])]
p:not(:nth-child(-4n+4)) 43 === 43 //p[not(self::node()[(count(preceding-sibling::*) + 1) <= 4 and (count(preceding-sibling::*) - 3) mod 4 = 0])]

Have no matches: 16
p:not(:nth-child(n)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n)) - 0 - //p[not(self::node())]
p:not(:nth-child(n+0)) - 0 - //p[not(self::node())]
p:not(:nth-child(n-0)) - 0 - //p[not(self::node())]
p:not(:nth-child(n+1)) - 0 - //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 1])]
p:not(:nth-child(n-1)) - 0 - //p[not(self::node())]
p:not(:nth-child(n-2)) - 0 - //p[not(self::node())]
p:not(:nth-child(n-3)) - 0 - //p[not(self::node())]
p:not(:nth-child(n-4)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n+0)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n-0)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n+1)) - 0 - //p[not(self::node()[(count(preceding-sibling::*) + 1) >= 1])]
p:not(:nth-child(1n-1)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n-2)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n-3)) - 0 - //p[not(self::node())]
p:not(:nth-child(1n-4)) - 0 - //p[not(self::node())]
