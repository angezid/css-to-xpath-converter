{
  "paths": [
    "CssToXPath.html"
  ],
  "selectors": [
    "*:has-parent(div[id])",
    "*:has-sibling(div[id])",
    "*:nth-child(-n+3 of li.noted)",
    "*:has-sibling(div[id], ul[id])",
    "*:has-ancestor(div[id]):not(div)",
    "  li:nth-child(  -3n  +  4  )   ",
    "*:nth-last-child(-n+3 of li.noted)",
    "a:is([name], [href])",
    "a:not(li.c1 a, p a)",
    "article p:only-of-type",
    "article p:first-of-type",
    "article em:last-of-type",
    "article div:only-of-type",
    "article>div>em:last-of-type",
    "article div[class]:last-of-type",
    "b:not(ul > :nth-child(2n) b)",
    "b:not(ul > li:nth-of-type(2n) b)",
    "b:not(ul > :nth-last-child(2n) b)",
    "b:not(ul > li:nth-last-of-type(2n) b)",
    "body[lang|=EN]",
    "body[lang|=En i]",
    "div.content",
    "div>*:only-child",
    "div[class='diV' i]",
    "div[class*='iv' i]",
    "div[class!='div' i]",
    "div + p:nth-child(2)",
    "div ~ p:nth-child(2)",
    "div > p:nth-child(2)",
    "div[class|='last' i]",
    "div [class^='emph' i]",
    "div [class$='size' i]",
    "div[class~='parent' i]",
    "div + p:nth-last-child(1)",
    "div ~ p:nth-last-child(1)",
    "div > p:nth-last-child(1)",
    "div[id]:has-sibling(div:empty)",
    "div ul[id=list] > li:range(2, 5)",
    "div:contains('Test')",
    "div:empty",
    "div:first-child",
    "div:has(h1, h2)",
    "div:has(>ul, >p)",
    "div:has(+div[id])",
    "div:has(h1, :not(h2, p, :empty))",
    "div:has(+ div:has(> p, ~ :empty))",
    "div:has(h1, h2, p, li):not([id^=list])",
    "div:has(+ div:has(> h1, > p, + :empty))",
    "div:has(p):last-child:contains('XPath')",
    "div:has(h1, h2, .nested):not(:has(li))/*excluded .nested*/",
    "div:has-ancestor(main)",
    "div:has-parent(main)",
    "div:icontains('content')",
    "div:istarts-with('TEST')",
    "div:last-child",
    "div:not(h1, h2)",
    "div:not(:has(#lists)):not(:has(ul))",
    "div:not(:has-ancestor(#lists), :has(h2), :contains('Content'))",
    "div:starts-with('Test')",
    ":is(ol,ul) :is(ol,ul) ol",
    ":is(p, li):has-ancestor(div, ul[id])",
    ":is(p, h1, li):has-parent(div, ul[id])",
    "li !> ul",
    "li:not(:first)",
    "li:not(:last(4))",
    "li:not(:first(4))",
    "li:not(ul[id] :gt(4))",
    "li:not(ul[id] > :lt(4))",
    "li:not(:nth-child(odd of .noted))",
    "li:not(div:first div > ul :last(3))",
    "li:not(div:first div > ul :first(3))",
    "li:not(:nth-last-child(odd of .noted))",
    "li:not(body div:first div > ul :range(2, 4))",
    "li:nth-child(even of .noted)",
    "li:nth-child(-n+3 of li.noted)",
    "li:nth-child(even of :not(.noted))",
    "li:nth-last-child(even of .noted)",
    "li:nth-last-child(-n+3 of li.noted)",
    "li:nth-last-child(even of :not(.noted))",
    "li:nth-last-child(even of :not(.noted ~ li))",
    "main > div[id=lists]",
    ":not(div + p)",
    ":not(div > p)",
    ":not(div ~ p)",
    ":not(div ^ p)",
    ":not(p ! div)",
    ":not(p !+ div)",
    ":not(p !> div)",
    ":not(p !~ div)",
    ":not(div !^ p)",
    ":not(.p3 span)",
    ":not(p ! div b)",
    ":not(div p span)",
    ":not(div + p span)",
    ":not(div > p span)",
    ":not(div ~ p span)",
    ":not(div ^ p span)",
    ":not(p !> div span)",
    ":not(div !^ p span)",
    ":not(li:range(2, 5))",
    ":not([class] span + b)",
    ":not(div !~ p span > b)",
    ":not(div  p > span, p b)",
    ":not(div > div + p > span)",
    ":not(div > [class] span + b)",
    ":not(:has(div + p:nth-last-child(1)))",
    ":nth-child(even of :not(.noted ~ li))",
    ":nth-child(even of :not(.noted > span))",
    ":nth-child(even of :not(.noted + li span))",
    ":nth-last-child(even of :not(.noted > span))",
    ":nth-last-child(even of :not(.noted + li span))",
    "p + *",
    "p.p4 ~ *",
    "p.p2 !> *",
    "p.p4 !~ *",
    "p[class=p2]",
    "p[class^=p2]",
    "p[class$=p2]",
    "p[class~=p2]",
    "p[class*=p2]",
    "p[class|=p2]",
    "p.es\\'cap\\'ed",
    "p.es\\{cap\\}ed",
    "p#es\\'cap\\'ed",
    "p#es\\{cap\\}ed",
    "p[id$=cap\\}ed]",
    "p[id~=1escaped]",
    "p[id*=\\'cap\\']",
    "p.\\000031escaped",
    "p#\\000031escaped",
    "p[id|=\\#escaped]",
    "p[class='xyzψω' i]",
    "p[class$=cap\\}ed]",
    "p[class~=1escaped]",
    "p[title^='ΑβγδΕ' i]",
    "p[title^='áβγδε' i]",
    "p[class*=\\'cap\\']",
    "p[id=es\\'cap\\'ed]",
    "p[class|=\\#escaped]",
    "p[title$='στυφχψΩ' i]",
    "p[class=es\\'cap\\'ed]",
    "p[title='ΑβγδεζηθικλμνξοπρστυφχψΩ' i]",
    "p:after(h2)",
    "p:after(ul ul.c1 ul.c2)",
    "p:before(h2)",
    "p:before(ul ul.c1 ul.c2)",
    "p:ends-with('XPath convertor')",
    "p:iends-with('xpath Convertor')",
    "p:nth-child(3)",
    "p:nth-child(odd)",
    "p:nth-child(even)",
    "p:nth-last-child(3)",
    "p:nth-last-child(odd)",
    "p:nth-last-child(even)",
    "p:nth-last-of-type(3)",
    "p:nth-last-of-type(odd)",
    "p:nth-last-of-type(even)",
    "p:nth-of-type(3)",
    "p:nth-of-type(odd)",
    "p:nth-of-type(even)",
    ":root",
    "ul",
    "ul[id] ^ li ~ li",
    "ul > li:first + *",
    "ul > li:last !+ *",
    "ul[id] > li:lt(4)",
    "ul[id]>li:skip(4)",
    "ul[id] !^ li !~ li",
    "ul li:nth-child(3)",
    "ul>li[title$='One']",
    "ul[id]>li:skip-last",
    "ul>li[title^='Item']",
    "ul>li[title*='Item']",
    "ul[id]>li:skip-first",
    "ul[id] > li:limit(5)",
    "ul li:nth-child(odd)",
    "ul li:nth-child(n+3)",
    "ul li:nth-child(n+4)",
    "ul li:nth-of-type(3)",
    "ul>li[title$='one' i]",
    "ul>li[title~='two' i]",
    "ul li:nth-child(even)",
    "ul li:nth-child(3n+2)",
    "ul li:nth-child(-n+4)",
    "ul li:nth-child(5n-2)",
    "ul>li[title^='item' i]",
    "ul[id]>li:skip-last(3)",
    "ul li:nth-child(-3n+4)",
    "ul li:nth-of-type(odd)",
    "ul li:nth-of-type(n+3)",
    "ul li:nth-of-type(n+4)",
    "ul[id] > li:not(:gt(4))",
    "ul[id]>li:skip-first(2)",
    "ul li:nth-last-child(3)",
    "ul li:nth-of-type(even)",
    "ul li:nth-of-type(3n+2)",
    "ul li:nth-of-type(3n-2)",
    "ul li:nth-of-type(-n+4)",
    "ul[id='list'] > li:gt(4)",
    "ul[id] > li:not(:nth(3))",
    "ul[id] li:not(:limit(4))",
    "ul li:nth-of-type(-3n+4)",
    "ul>li[title='item one' i]",
    "ul[id] > li:not(:skip(4))",
    "ul[id] li:not(:skip-last)",
    "ul li:nth-last-child(odd)",
    "ul li:nth-last-child(n+3)",
    "ul li:nth-last-child(n+4)",
    "ul li:nth-last-of-type(3)",
    "ul[id] li:not(:skip-first)",
    "ul li:nth-last-child(even)",
    "ul li:nth-last-child(3n+2)",
    "ul li:nth-last-child(-n+4)",
    "ul li:nth-last-child(5n-2)",
    "ul li:nth-last-child(-3n+4)",
    "ul li:nth-last-of-type(n+3)",
    "ul li:nth-last-of-type(n+4)",
    "ul>li[title*='em Twenty On']",
    "ul li:nth-last-of-type(3n+2)",
    "ul li:nth-last-of-type(3n-2)",
    "ul li:nth-last-of-type(-n+4)",
    "ul li:nth-last-of-type(-3n+4)",
    "ul>li[title*='em twenty on' i]",
    "ul[id] > li:not(:skip-last(3))",
    "ul[id] > li:not(:skip-first(2))",
    "ul[id] > li:not(div ul > :last(3))",
    "ul[id] > li:eq(4), ul[id]>li:nth(5)",
    "ul  >  li[  title  =  'item one'  i  ]",
    "ul:first > li:first",
    "ul:first li:first(3)",
    "ul:first>li:not(.c1, .c2, .c6, .c7)",
    "ul:first  >   li:not(  .c1  , .c2,   .c6, .c7   )",
    "ul:last > li:last",
    "ul:last li:last(3)"
  ]
}