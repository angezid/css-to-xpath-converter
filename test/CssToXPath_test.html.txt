Passed: 57
Have no matches: 26


reportName

Results:
Passed: 57
Have no matches: 26

Passed: 57
* 1781 === 1781 //*
ul 22 === 22 //ul
:root 1 === 1 //ancestor-or-self::*[last()]
div, p 375 === 375 //div | //p
p:has(b) 2 === 2 //p[count(.//b) > 0]
div:last-child 1 === 1 //div[not(following-sibling::*)]
p:not(.c1) 324 === 324 //p[not(contains(concat(' ', normalize-space(@class), ' '), ' c1 '))]
p:nth-child(3) 8 === 8 //*[position() = 3]/self::p
div:first-child 1 === 1 //div[not(preceding-sibling::*)]
div>*:only-child 3 === 3 //div/*[not(preceding-sibling::*) and not(following-sibling::*)]
p:nth-child(odd) 166 === 166 //*[(count(preceding-sibling::*) + 1) mod 2 = 1]/self::p
p:nth-of-type(3) 24 === 24 //p[count(preceding-sibling::p) = 2]
p:nth-child(even) 158 === 158 //*[(count(preceding-sibling::*) + 1) mod 2 = 0]/self::p
ul li:nth-child(3) 14 === 14 //ul//*[position() = 3]/self::li
p:nth-of-type(odd) 176 === 176 //p[(count(preceding-sibling::p) + 1) mod 2 = 1]
p:nth-last-child(3) 22 === 22 //p[count(following-sibling::*) = 2]
p:nth-of-type(even) 148 === 148 //p[(count(preceding-sibling::p) + 1) mod 2 = 0]
a:is([name], [href]) 296 === 296 //a[@name or @href]
ul li:nth-child(odd) 52 === 52 //ul//*[(count(preceding-sibling::*) + 1) mod 2 = 1]/self::li
ul li:nth-child(n+3) 53 === 53 //ul//*[position() >= 3]/self::li
ul li:nth-child(n+4) 39 === 39 //ul//*[position() >= 4]/self::li
ul li:nth-of-type(3) 14 === 14 //ul//li[count(preceding-sibling::li) = 2]
ul li:nth-child(even) 42 === 42 //ul//*[(count(preceding-sibling::*) + 1) mod 2 = 0]/self::li
ul li:nth-child(3n+2) 31 === 31 //ul//*[position() >= 2 and (count(preceding-sibling::*) - 1) mod 3 = 0]/self::li
ul li:nth-child(-n+4) 64 === 64 //ul//*[position() <= 4]/self::li
ul li:nth-child(5n-2) 18 === 18 //ul//*[(count(preceding-sibling::*) + 3) mod 5 = 0]/self::li
p:nth-last-child(odd) 151 === 151 //p[(count(following-sibling::*) + 1) mod 2 = 1]
p:nth-last-of-type(3) 24 === 24 //p[count(following-sibling::p) = 2]
ul li:nth-child(-3n+4) 31 === 31 //ul//*[position() <= 4 and (count(preceding-sibling::*) - 3) mod 3 = 0]/self::li
p:nth-last-child(even) 173 === 173 //p[(count(following-sibling::*) + 1) mod 2 = 0]
ul li:nth-of-type(odd) 52 === 52 //ul//li[(count(preceding-sibling::li) + 1) mod 2 = 1]
ul li:nth-of-type(n+3) 53 === 53 //ul//li[count(preceding-sibling::li) >= 2]
ul li:nth-of-type(n+4) 39 === 39 //ul//li[count(preceding-sibling::li) >= 3]
ul li:nth-last-child(3) 14 === 14 //ul//li[count(following-sibling::*) = 2]
ul li:nth-of-type(even) 42 === 42 //ul//li[(count(preceding-sibling::li) + 1) mod 2 = 0]
ul li:nth-of-type(3n+2) 31 === 31 //ul//li[count(preceding-sibling::li) >= 1 and (count(preceding-sibling::li) - 1) mod 3 = 0]
ul li:nth-of-type(3n-2) 38 === 38 //ul//li[(count(preceding-sibling::li) + 3) mod 3 = 0]
ul li:nth-of-type(-n+4) 64 === 64 //ul//li[count(preceding-sibling::li) <= 3]
p:nth-last-of-type(odd) 176 === 176 //p[(count(following-sibling::p) + 1) mod 2 = 1]
ul li:nth-of-type(-3n+4) 31 === 31 //ul//li[count(preceding-sibling::li) <= 3 and (count(preceding-sibling::li) - 3) mod 3 = 0]
p:nth-last-of-type(even) 148 === 148 //p[(count(following-sibling::p) + 1) mod 2 = 0]
ul li:nth-last-child(odd) 52 === 52 //ul//li[(count(following-sibling::*) + 1) mod 2 = 1]
ul li:nth-last-child(n+3) 53 === 53 //ul//li[count(following-sibling::*) >= 2]
ul li:nth-last-child(n+4) 39 === 39 //ul//li[count(following-sibling::*) >= 3]
ul li:nth-last-of-type(3) 14 === 14 //ul//li[count(following-sibling::li) = 2]
ul li:nth-last-child(even) 42 === 42 //ul//li[(count(following-sibling::*) + 1) mod 2 = 0]
ul li:nth-last-child(3n+2) 31 === 31 //ul//li[count(following-sibling::*) >= 1 and (count(following-sibling::*) - 1) mod 3 = 0]
ul li:nth-last-child(-n+4) 64 === 64 //ul//li[count(following-sibling::*) <= 3]
ul li:nth-last-child(5n-2) 18 === 18 //ul//li[(count(following-sibling::*) + 3) mod 5 = 0]
ul li:nth-last-child(-3n+4) 31 === 31 //ul//li[count(following-sibling::*) < 4 and (count(following-sibling::*) - 3) mod 3 = 0]
ul li:nth-last-of-type(n+3) 53 === 53 //ul//li[count(following-sibling::li) >= 2]
ul li:nth-last-of-type(n+4) 39 === 39 //ul//li[count(following-sibling::li) >= 3]
ul li:nth-last-of-type(3n+2) 31 === 31 //ul//li[count(following-sibling::li) >= 1 and (count(following-sibling::li) - 1) mod 3 = 0]
ul li:nth-last-of-type(3n-2) 38 === 38 //ul//li[(count(following-sibling::li) + 3) mod 3 = 0]
ul li:nth-last-of-type(-n+4) 64 === 64 //ul//li[count(following-sibling::li) <= 3]
ul li:nth-last-of-type(-3n+4) 31 === 31 //ul//li[count(following-sibling::li) < 4 and (count(following-sibling::li) - 3) mod 3 = 0]
div:has(p, ul), div[id='header'] 51 === 51 //div[count(.//p | .//ul) > 0] | //div[@id = 'header']

Have no matches: 26
div:empty - 0 - //div[not(*) and not(text())]
body[lang|=EN] - 0 - //body[(@lang = 'EN' or starts-with(@lang, 'EN-'))]
ul:first-child>li:not(.c1,.c2,.c6,.c7) - 0 - //ul[not(preceding-sibling::*)]/li[not(self::node()[contains(concat(' ', normalize-space(@class), ' '), ' c1 ')] | self::node()[contains(concat(' ', normalize-space(@class), ' '), ' c2 ')] | self::node()[contains(concat(' ', normalize-space(@class), ' '), ' c6 ')] | self::node()[contains(concat(' ', normalize-space(@class), ' '), ' c7 ')])]
body[lang|=En i] - 0 - //body[(translate(@lang, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz') = translate('En', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz') or starts-with(translate(@lang, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), concat(translate('En', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), '-')))]
ul>li[title$='One'] - 0 - //ul/li[substring(@title, string-length(@title) - (string-length('One') - 1)) = 'One']
p[title^='ΑβγδΕ' i] - 0 - //p[starts-with(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), translate('ΑβγδΕ', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'))]
p[title^='áβγδε' i] - 0 - //p[starts-with(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), translate('áβγδε', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'))]
div[id]:has(h1, h2) - 0 - //div[@id and count(.//h1 | .//h2) > 0]
ul>li[title^='Item'] - 0 - //ul/li[starts-with(@title, 'Item')]
ul>li[title*='Item'] - 0 - //ul/li[contains(@title, 'Item')]
main > div[id=lists] - 0 - //main/div[@id = 'lists']
ul>li[title$='one' i] - 0 - //ul/li[substring(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), string-length(@title) - (string-length('one') - 1)) = translate('one', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')]
ul>li[title~='two' i] - 0 - //ul/li[contains(concat(' ', normalize-space(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')), ' '), concat(' ', translate('two', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), ' '))]
p[title$='στυφχψΩ' i] - 0 - //p[substring(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), string-length(@title) - (string-length('στυφχψΩ') - 1)) = translate('στυφχψΩ', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')]
ul>li[title^='item' i] - 0 - //ul/li[starts-with(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), translate('item', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'))]
article p:only-of-type - 0 - //article//p[count(preceding-sibling::p) = 0 and count(following-sibling::p) = 0]
article p:first-of-type - 0 - //article//p[not(preceding-sibling::p)]
article em:last-of-type - 0 - //article//em[not(following-sibling::em)]
:is(ol,ul) :is(ol,ul) ol - 0 - //*[self::ol or self::ul]//*[self::ol or self::ul]//ol
article div:only-of-type - 0 - //article//div[count(preceding-sibling::div) = 0 and count(following-sibling::div) = 0]
ul>li[title='item one' i] - 0 - //ul/li[translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz') = translate('item one', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')]
article>div>em:last-of-type - 0 - //article/div/em[not(following-sibling::em)]
ul>li[title*='em Twenty On'] - 0 - //ul/li[contains(@title, 'em Twenty On')]
ul>li[title*='em twenty on' i] - 0 - //ul/li[contains(translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'), translate('em twenty on', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz'))]
p[title='ΑβγδεζηθικλμνξοπρστυφχψΩ' i] - 0 - //p[translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz') = translate('ΑβγδεζηθικλμνξοπρστυφχψΩ', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')]
ul  >  li[  title  =  'item one'  i  ] - 0 - //ul/li[translate(@title, 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz') = translate('item one', 'ABCDEFGHJIKLMNOPQRSTUVWXYZ', 'abcdefghjiklmnopqrstuvwxyz')]
